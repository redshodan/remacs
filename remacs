#!/usr/bin/python
#
# Copyright (C) 2009 Chris Newton <redshodan@gmail.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#
# Author: Chris Newton <redshodan@gmail.com>
# $Revision$
#

import sys
if ((sys.version_info[0] < 2) and (sys.version_info[1] < 5)):
    print "remacs requires Python version 2.5 or higher."
    sys.exit(-1)

### FIXME: Do this right once we have a setup.py and install etc.
import os
if os.path.islink(__file__):
    path = os.path.dirname(os.readlink(__file__))
else:
    path = os.path.dirname(__file__)
sys.path.append(os.path.abspath(os.path.join(path, "build/python")))

import sys
from optparse import OptionParser

import remacs
from remacs import log
from remacs.server import Server
from remacs.client import Client


remacs.init(path)
del path


if __name__ == "__main__":
    parser = OptionParser(usage="Usage: %prog [options] <hostname>")
    parser.add_option("-s", "--server", action="store_true", dest="server",
                      default=False, help="Run in server mode")
    parser.add_option("-t", "--transport", dest="transport", default="ssh",
                      help="Transport program. ie: ssh")
    parser.add_option("-X", "--no-x", action="store_true", dest="no_x",
                      default=False, help="Disable X support")
    (options, args) = parser.parse_args()

    if options.server:
        log.init("server")
        server = Server(options)
        server.run()
    elif len(args) != 1:
        parser.print_help()
    else:
        log.init("client")
        options.host = args[0]
        client = Client(options)
        client.run()
