--- SWIG/_ssl.i.org	2011-01-15 12:10:06.000000000 -0700
+++ SWIG/_ssl.i	2011-09-20 21:44:45.188564003 -0600
@@ -403,23 +403,33 @@
     return ret;
 }
 
+void SetWantRWError(int which) {
+    PyObject *o = Py_BuildValue("(is)", which, 
+                                ERR_reason_error_string(ERR_get_error()));
+    if (o != NULL) {
+        PyErr_SetObject(_ssl_err, o);
+        Py_DECREF(o);
+    }
+}
+
 PyObject *ssl_accept(SSL *ssl) {
     PyObject *obj = NULL;
-    int r, err;
+    int r, err, which;
 
     Py_BEGIN_ALLOW_THREADS
     r = SSL_accept(ssl);
     Py_END_ALLOW_THREADS
 
 
-    switch (SSL_get_error(ssl, r)) {
+    switch ((which = SSL_get_error(ssl, r))) {
         case SSL_ERROR_NONE:
         case SSL_ERROR_ZERO_RETURN:
             obj = PyInt_FromLong((long)1);
             break;
         case SSL_ERROR_WANT_WRITE:
         case SSL_ERROR_WANT_READ:
-            obj = PyInt_FromLong((long)0);
+            SetWantRWError(which);
+            obj = NULL;
             break;
         case SSL_ERROR_SSL:
             PyErr_SetString(_ssl_err, ERR_reason_error_string(ERR_get_error()));
@@ -443,21 +453,22 @@
 
 PyObject *ssl_connect(SSL *ssl) {
     PyObject *obj = NULL;
-    int r, err;
-
+    int r, err, which;
+    
     Py_BEGIN_ALLOW_THREADS
     r = SSL_connect(ssl);
     Py_END_ALLOW_THREADS
 
     
-    switch (SSL_get_error(ssl, r)) {
+    switch ((which = SSL_get_error(ssl, r))) {
         case SSL_ERROR_NONE:
         case SSL_ERROR_ZERO_RETURN:
             obj = PyInt_FromLong((long)1);
             break;
         case SSL_ERROR_WANT_WRITE:
         case SSL_ERROR_WANT_READ:
-            obj = PyInt_FromLong((long)0);
+            SetWantRWError(which);
+            obj = NULL;
             break;
         case SSL_ERROR_SSL:
             PyErr_SetString(_ssl_err, ERR_reason_error_string(ERR_get_error()));
@@ -486,7 +497,7 @@
 PyObject *ssl_read(SSL *ssl, int num) {
     PyObject *obj = NULL;
     void *buf;
-    int r, err;
+    int r, err, which;
 
     if (!(buf = PyMem_Malloc(num))) {
         PyErr_SetString(PyExc_MemoryError, "ssl_read");
@@ -499,6 +510,6 @@
     Py_END_ALLOW_THREADS
 
 
-    switch (SSL_get_error(ssl, r)) {
+    switch ((which = SSL_get_error(ssl, r))) {
         case SSL_ERROR_NONE:
         case SSL_ERROR_ZERO_RETURN:
@@ -507,6 +519,9 @@
             break;
         case SSL_ERROR_WANT_WRITE:
         case SSL_ERROR_WANT_READ:
+            SetWantRWError(which);
+            obj = NULL;
+            break;
         case SSL_ERROR_WANT_X509_LOOKUP:
             Py_INCREF(Py_None);
             obj = Py_None;
@@ -535,7 +550,7 @@
 PyObject *ssl_read_nbio(SSL *ssl, int num) {
     PyObject *obj = NULL;
     void *buf;
-    int r, err;
+    int r, err, which;
 
 
     if (!(buf = PyMem_Malloc(num))) {
@@ -549,7 +564,7 @@
     Py_END_ALLOW_THREADS
     
     
-    switch (SSL_get_error(ssl, r)) {
+    switch ((which = SSL_get_error(ssl, r))) {
         case SSL_ERROR_NONE:
         case SSL_ERROR_ZERO_RETURN:
             buf = PyMem_Realloc(buf, r);
@@ -557,6 +572,9 @@
             break;
         case SSL_ERROR_WANT_WRITE:
         case SSL_ERROR_WANT_READ:
+            SetWantRWError(which);
+            obj = NULL;
+            break;
         case SSL_ERROR_WANT_X509_LOOKUP:
             Py_INCREF(Py_None);
             obj = Py_None;
@@ -584,7 +602,7 @@
 
 int ssl_write(SSL *ssl, PyObject *blob) {
     const void *buf;
-    int len, r, err, ret;
+    int len, r, err, ret, which;
 
 
     if (m2_PyObject_AsReadBufferInt(blob, &buf, &len) == -1) {
@@ -597,13 +615,16 @@
     Py_END_ALLOW_THREADS
 
 
-    switch (SSL_get_error(ssl, r)) {
+    switch ((which = SSL_get_error(ssl, r))) {
         case SSL_ERROR_NONE:
         case SSL_ERROR_ZERO_RETURN:
             ret = r;
             break;
         case SSL_ERROR_WANT_WRITE:
         case SSL_ERROR_WANT_READ:
+            SetWantRWError(which);
+            ret = -1;
+            break;
         case SSL_ERROR_WANT_X509_LOOKUP:
             ret = -1;
             break;
@@ -630,6 +651,6 @@
 int ssl_write_nbio(SSL *ssl, PyObject *blob) {
     const void *buf;
-    int len, r, err, ret;
+    int len, r, err, ret, which;
 
 
     if (m2_PyObject_AsReadBufferInt(blob, &buf, &len) == -1) {
@@ -642,13 +664,16 @@
     Py_END_ALLOW_THREADS
     
     
-    switch (SSL_get_error(ssl, r)) {
+    switch ((which = SSL_get_error(ssl, r))) {
         case SSL_ERROR_NONE:
         case SSL_ERROR_ZERO_RETURN:
             ret = r;
             break;
         case SSL_ERROR_WANT_WRITE:
         case SSL_ERROR_WANT_READ:
+            SetWantRWError(which);
+            ret = -1;
+            break;
         case SSL_ERROR_WANT_X509_LOOKUP:
             ret = -1;
             break;
